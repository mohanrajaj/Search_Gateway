AWSTemplateFormatVersion: '2010-09-09'
Description: 'CloudFormation template to deploy a Lambda function with IAM role and basic configuration'

Parameters:
  FunctionName:
    Type: String
    Default: 'search-gateway'
    Description: 'Name of the Lambda function'
    
  Runtime:
    Type: String
    Default: 'python3.9'
    AllowedValues:
      - python3.8
      - python3.9
      - python3.10
      - python3.11
      - nodejs16.x
      - nodejs18.x
      - nodejs20.x
      - java11
      - java17
      - dotnet6
      - go1.x
    Description: 'Runtime for the Lambda function'
    
  Handler:
    Type: String
    Default: 'lambda_function.lambda_handler'
    Description: 'Handler for the Lambda function'
    
  Timeout:
    Type: Number
    Default: 30
    MinValue: 1
    MaxValue: 900
    Description: 'Timeout for the Lambda function in seconds'
    
  MemorySize:
    Type: Number
    Default: 128
    MinValue: 128
    MaxValue: 10240
    Description: 'Memory size for the Lambda function in MB'

Resources:
  # IAM Role for Lambda Function
  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub '${FunctionName}-execution-role'
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: LambdaCustomPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: !Sub 'arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/${FunctionName}:*'

  # CloudWatch Log Group
  LambdaLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub '/aws/lambda/new/${FunctionName}'
      RetentionInDays: 14

Outputs:
  LambdaFunctionName:
    Description: 'Name of the Lambda function'
    Value: 'pdftotxt'
    Export:
      Name: !Sub '${AWS::StackName}-LambdaFunctionName'
      
  LambdaFunctionArn:
    Description: 'ARN of the Lambda function'
    Value: 'arn:aws:lambda:us-east-1:800712213119:function:pdftotxt'
    Export:
      Name: !Sub '${AWS::StackName}-LambdaFunctionArn'
      
  LambdaRoleArn:
    Description: 'ARN of the Lambda execution role'
    Value: !GetAtt LambdaExecutionRole.Arn
    Export:
      Name: !Sub '${AWS::StackName}-LambdaRoleArn'
      
  LambdaLogGroup:
    Description: 'CloudWatch Log Group for Lambda'
    Value: !Ref LambdaLogGroup
    Export:
      Name: !Sub '${AWS::StackName}-LambdaLogGroup'